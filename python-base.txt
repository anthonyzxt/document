#python#
---
##数据类型##
- 整型
- 字符串
	>Python源代码也是一个文本文件,为了让它按UTF-8编码读取，我们通常在文件开头写上这两行
	<pre>#!/usr/bin/env python
	# -*- coding: utf-8 -*-</pre>
- 浮点
- 布尔
- 空值
	>空值是Python里一个特殊的值，用None表示。None不能理解为0，因为0是有意义的，而None是一个特殊的空值
##格式化打印
- 常用占位符
	- %d 整数
	- %f	 浮点数
	- %s	 字符串
	- %x 十六进制整数
##tab补全命令
<pre># pwd
/usr/lib/python2.7

cat tab.py
#!/usr/bin/python   
# python startup file   
           
import sys   
import readline   
import rlcompleter   
import atexit   
import os    
# tab completion   
readline.parse_and_bind('tab: complete')   
# history file   
histfile = os.path.join(os.environ['HOME'], '.pythonhistory')   
try:   
    readline.read_history_file(histfile)   
except IOError:   
    pass   
atexit.register(readline.write_history_file, histfile)   
           
del os, histfile, readline, rlcompleter    
</pre>	
##运算符
- + - * /
##列表
- 主要方法
	>示例：
	><pre>classmates = ['Michael', 'Bob', 'Tracy']
	>>>> classmates
	['Michael', 'Bob', 'Tracy']</pre>
	- len
	>用len()函数可以获得list元素的个数
		<pre>>>> len(classmates)
		3
		</pre>
	- append
	>列表末尾追加
	- count
	>统计元素出现的次数
	- extend
	>将其他列表追加到当前列表中
	- index
	>用索引来访问list中每一个位置的元素，记得索引是从0开始的
	- insert
	>向列表中添加元素
	- pop
	>要删除list末尾的元素，用pop()方法  
	>要删除指定位置的元素，用pop(i)方法，其中i是索引位置
	- remove
	- reverse
	- sort
##元组
tuple一旦初始化就不能修改，也就是说append和insert方法会无法使用。  
示例：
<pre>>>> t = ('a', 'b', ['A', 'B'])
>>> t[2][0] = 'X'
>>> t[2][1] = 'Y'
>>> t
('a', 'b', ['X', 'Y'])</pre>
>这里之所以被修改，是因为修改了列表**['A', 'B']**
##字典
##条件判读和循环
###条件判断
1. if  
根据Python的缩进规则，如果if语句判断是True，就把缩进的两行print语句执行了，否则，什么也不做,如
    <pre>age = 20
    if age >= 18:
      print 'your age is', age
      print 'adult'</pre>
2. if...else
	<pre>age = 3
	if age >= 18:
      print 'your age is', age
      print 'adult'
	else:
      print 'your age is', age
      print 'teenager'
	</pre>
3. if...elif...else
	<pre>if <条件判断1>:
    <执行1>
	elif <条件判断2>:
	    <执行2>
	elif <条件判断3>:
	    <执行3>
	else:
    <执行4></pre>
###循环###
>两种循环：`for...in`和`while`  

1. for...in循环   
	>for...in循环，依次把list或tuple中的每个元素迭代出来  
	
	示例1：
	<pre>names = ['Michael', 'Bob', 'Tracy']
	for name in names:
       print name</pre>
	示例2：打印1到100的和  
	* 函数range生成一个整数序列
	<pre>sum = 0
	for x in range(101):
    	sum = sum + x
    	print sum</pre>
2. while循环
	>只要条件满足，就不断循环，条件不满足时退出循环
##raw_input
从raw_input()读取的内容永远以字符串的形式返回,必须先把字符串转换为我们想要的类型。  
如转换为整型：  
	`birth = int(raw_input('birth: '))`